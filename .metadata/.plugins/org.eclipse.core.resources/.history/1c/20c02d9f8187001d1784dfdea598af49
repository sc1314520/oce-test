package filter.sensitive;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;

// @WebFilter("/*")
public class sensitive implements Filter {
	private List<String> list =new ArrayList<>();
	@Override
	public void init(FilterConfig filterConfig) throws ServletException {
		
		try {
			//加載文件
			ServletContext servletContext = filterConfig.getServletContext();
			String realPath = servletContext.getRealPath("/WEB-INF/classes/sensitive.txt");
			//讀取文件
			BufferedReader br =new BufferedReader(new FileReader(realPath));
			//將文件的每一行數據添加到list中
			String line =null;
			while((line=br.readLine())!=null) {
				list.add(line);
			}
			br.close();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
			throws IOException, ServletException {
		// 創建代理對象
		ServletRequest proxy_req = (ServletRequest)Proxy.newProxyInstance(request.getClass().getClassLoader(),request.getClass().getInterfaces(), new InvocationHandler() {
			
			@Override
			public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
				//增強 getParameter() 方法
				if(method.getName().equals("getParameter")) {
					//增強返回值
					//獲取返回值
					String value = (String) method.invoke(request, args);
					if(value!=null) {
						for(String str :list) {
							if(value.contains(str)) {
								value=value.replace(str, "***");
							}
						}
					}
				}
				return value;
			}
		});
		
	}

}
